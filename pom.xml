<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>MavenWeb</groupId>
	<artifactId>MavenWeb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name />
	<description />
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	</properties>



	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.11</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.11</version>
		</dependency>


		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/c3p0/c3p0 -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.28</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.0.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-asm -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springframework/spring-beans -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>



		<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.0.5.release</version>
		</dependency>


		<!-- https://mvnr epository.com/artifact/org.springframework/spring-core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springframework/spring-expression -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	
    <!-- 下载私服中的jar包到本地仓库的配置方式之一，记得去window中找到user settings去update setting。第二种方法是去settings.xml文件中配置mirror也可，详见D:/mvn_repo/settings.xml-->
	<!-- <repositories>
		<repository>
			<snapshots>
			为false则不会下载私服中的测试版本的jar包，中心仓库的下载配置处有同样的配置（pom4.0.0.xml）
				<enabled>false</enabled>
			</snapshots>
			<id>public</id>
			<name>Maven</name>
			<url>http://127.0.0.1:8080/nexus-2.14.5-02/content/groups/public/</url>
		</repository>
	</repositories>
	<pluginRepositories> 
		<pluginRepository>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
			为false则不会下载私服中的测试版本的插件 ，中心仓库的下载配置处有同样的配置（pom4.0.0.xml）
				<enabled>false</enabled>
			</snapshots>
			<id>public</id>
			<name>Maven</name>
			<url>http://127.0.0.1:8080/nexus-2.14.5-02/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories> -->

	<!-- 分配管理，把项目部署到私服中(首先在settings.xml中配置如下server内容，然后书写如下<distributionManagement>...</distributionManagement>配置内容) -->
	<!--配置服务器
    <server>
      <id>releases</id>
      <username>admin</username>
      <password>admin123</password>
    </server>
	 <server>
      <id>snapshots</id>
      <username>admin</username>
      <password>admin123</password>
    </server>
	-->
	<!-- <distributionManagement>
		将项目部署到 存储测试版本jar包的仓库中
		<snapshotRepository>
			<id>snapshots</id>
			这个pom文档中的127.0.0.1可以换成localhost或者具体的ip地址
			<url>http://127.0.0.1:8080/nexus-2.14.5-02/content/repositories/snapshots/</url>
		</snapshotRepository>
		将项目部署到 存储正式版本jar包的仓库中
		<repository>
			<id>releases</id>
			<url>http://127.0.0.1:8080/nexus-2.14.5-02/content/repositories/releases/</url>
		</repository>

	</distributionManagement> -->














	<build>
		<sourceDirectory>${basedir}/src</sourceDirectory>
		<outputDirectory>${basedir}/WebRoot/WEB-INF/classes</outputDirectory>
		<resources>
			<resource>
				<directory>${basedir}/src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webappDirectory>${basedir}/WebRoot</webappDirectory>
					<warSourceDirectory>${basedir}/WebRoot</warSourceDirectory>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>